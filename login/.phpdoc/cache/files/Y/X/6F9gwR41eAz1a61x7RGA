1677376658
waR3U4bTeM%3Ac255a832615bbb41a332db74a4cdb2f3-0149e00b1eb4f0821702067dca681e12
s:11064:"O:33:"phpDocumentor\Reflection\Php\File":12:{s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:0:"";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:7:{i:0;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"package";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:15:"StomatologiaKNR";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:1;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:16:"Kacper Cichorski";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:36:"kacper.cichorski@zsmeie.edu.torun.pl";s:14:" * description";N;}i:2;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:14:"Natan Grajczyk";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:34:"natan.grajczyk@zsmeie.edu.torun.pl";s:14:" * description";N;}i:3;O:45:"phpDocumentor\Reflection\DocBlock\Tags\Author":4:{s:7:" * name";s:6:"author";s:57:" phpDocumentor\Reflection\DocBlock\Tags\Author authorName";s:17:"Remigiusz Fischer";s:58:" phpDocumentor\Reflection\DocBlock\Tags\Author authorEmail";s:37:"remigiusz.fischer@zsmeie.edu.torun.pl";s:14:" * description";N;}i:4;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:9:"copyright";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:72:"Copyright (c) 2022 StomatologiaKNR <https://github.com/K4CP3RR0/stomknr>";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:5;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Generic":2:{s:7:" * name";s:7:"license";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:18:"Propietary license";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}i:6;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Version":3:{s:7:" * name";s:7:"version";s:55:" phpDocumentor\Reflection\DocBlock\Tags\Version version";s:5:"1.0.0";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"0149e00b1eb4f0821702067dca681e12";s:39:" phpDocumentor\Reflection\Php\File name";s:18:"register_check.php";s:39:" phpDocumentor\Reflection\Php\File path";s:25:"logreg/register_check.php";s:41:" phpDocumentor\Reflection\Php\File source";s:4337:"<?php
/**
 * 
 * @package StomatologiaKNR
 * @author Kacper Cichorski <kacper.cichorski@zsmeie.edu.torun.pl>
 * @author Natan Grajczyk <natan.grajczyk@zsmeie.edu.torun.pl>
 * @author Remigiusz Fischer <remigiusz.fischer@zsmeie.edu.torun.pl>
 * @copyright Copyright (c) 2022 StomatologiaKNR <https://github.com/K4CP3RR0/stomknr>
 * @license Propietary license
 * @version 1.0.0
 */
/**
 * Sprawdzenie czy pola są poprawne */
if ((!isset($_POST['InputPassword'])) || (!isset($_POST['InputEmail'])) || (!isset($_POST['telefon'])) || (!isset($_POST['imie'])) || (!isset($_POST['nazwisko'])) || (!isset($_POST['ulinum'])) || (!isset($_POST['miejscowosc'])) || (!isset($_POST['pesel'])) || $_POST['InputPassword']=="" || $_POST['InputEmail']=="" || $_POST['telefon']=="" || $_POST['imie']=="" || $_POST['nazwisko']=="" || $_POST['ulinum']=="" || $_POST['miejscowosc']=="" || $_POST['pesel']=="" || $_POST['haslo2']=="" || (!isset($_POST['haslo2']))){
	header('Location: register.php');
	exit;
}
/** 
* Pobranie wartości pól logowania i hasła */
$login = $_POST['InputEmail'];
$haslo = $_POST['InputPassword'];
$telefon = $_POST['telefon'];
$imie = $_POST['imie'];
$nazwisko = $_POST["nazwisko"];
$ulinum = $_POST['ulinum']; 
$miejscowosc = $_POST['miejscowosc'];
$pesel = $_POST["pesel"];
$haslo2 = $_POST['haslo2'];
$login = htmlentities($login, ENT_QUOTES, "UTF-8");
$haslo = htmlentities($haslo, ENT_QUOTES, "UTF-8");
$telefon = htmlentities($telefon,ENT_QUOTES,"UTF-8");
$imie = htmlentities($imie,ENT_QUOTES,"UTF-8");
$nazwisko = htmlentities($nazwisko,ENT_QUOTES,"UTF-8");
$ulinum = htmlentities($ulinum,ENT_QUOTES,"UTF-8");
$miejscowosc = htmlentities($miejscowosc,ENT_QUOTES,"UTF-8");
$pesel = htmlentities($pesel,ENT_QUOTES,"UTF-8");
$haslo2 = htmlentities($haslo2,ENT_QUOTES,"UTF-8");

/**
 * Sprawdzenie czy oba hasła są takie same, w przeciwnym razie odświeżenie panelu rejestracji
 */
if ($haslo2!=$haslo){
    header('Location: register.php');
	exit;
}
/**
 * Sprawdzenie czy pesel ma 11 cyfr, w przeciwnym razie odświeżenie panelu rejestracji
 */
if(strlen($pesel)!=11){
    header("Location: register.php");
    exit;
}
/**
 * Sprawdzenie czy telefon ma 9 cyfr, w przeciwnym razie odświeżenie panelu rejestracji
 */
if (strlen($telefon)!=9){
    header("Location: register.php");
    exit;
}

/**
 * Dołaczenie pliku łączącego z bazą danych
 */
require_once("con.php");


/**
* Jeśli błędne połączenie z bazą, odświeżenie panelu logowania */
if(!$link){
    header('Location: register.php');
    exit;
}
else{
    /**
     * Sprawdzenie czy istnieje osoba z podanym w formularzu jeśli nie przejście dalej do sprawdzania
     */
    $sql = sprintf("SELECT pesel FROM pacjenci WHERE pesel='%s'",mysqli_real_escape_string($link,$pesel));
    $result = mysqli_query($link,$sql);
    if (mysqli_num_rows($result) >=1){
        header("Location: register.php");
        exit;
    }
    /** 
     * Sprawdzenie czy istnieje osoba z podanym loginem, jeśli nie przejście dalej*/
    $sql = sprintf("SELECT login FROM pacjenci WHERE login='%s'",mysqli_real_escape_string($link,$login));
    $result = mysqli_query($link,$sql);
    if (mysqli_num_rows($result) >=1){
        header("Location: register.php");
        exit;
    }
    /**
     * Dodanie użytkownika do bazy danych, aby umożliwić mu logowanie poprzez panel pacjenta
     */
    $sql = sprintf("INSERT INTO pacjenci (imie,nazwisko,pesel,nr_telefonu,miejscowosc,ulica_i_numer,email,haslo) VALUES ('%s','%s','%s','%s','%s','%s','%s','%s')",
    mysqli_real_escape_string($link,$imie),
    mysqli_real_escape_string($link,$nazwisko),
    mysqli_real_escape_string($link,$pesel),
    mysqli_real_escape_string($link,$telefon),
    mysqli_real_escape_string($link,$miejscowosc),
    mysqli_real_escape_string($link,$ulinum),
    mysqli_real_escape_string($link,$login),
    mysqli_real_escape_string($link,$haslo));
    $result = mysqli_query($link,$sql);
   
    /** 
     * Jeśli rejestracja poprawna przeniesienie do panelu logowania */
    if ($result) {
        header('Location: login.php');
        exit;
    } 
    /** 
     * W przeciwnym razie ponowna rejestracja */
    else{
        header("Location: register.php");
        exit;
    }
    /** 
     * Zakończenie połączenia z bazą danych
     */
    mysqli_close($link);    
}
?>";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}}";